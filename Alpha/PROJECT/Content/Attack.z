class Attack : ZilchComponent
{
    var Damage : Real;
    
    var LifeTime : Real;
    
    var ValuesSet : Boolean = false;
    
    var Impulse : Real3;
    
    
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
        Zero.Connect(this.Owner, Events.CollisionStarted, this.Push);
    }
    function OnLogicUpdate(event : UpdateEvent)
    {
        if (this.Space.GlobalVariables.Dashing)
            this.Owner.Destroy();
        if(this.ValuesSet)
        {
            if(this.LifeTime > 0)
            {
                this.LifeTime -= event.Dt;
                this.LifeTime = Math.Round(this.LifeTime, -2);
            }
            else
                this.Owner.Destroy();
        }
        if(this.Space.FindObjectByName("PrototypePlayer").Sprite.FlipX)
            this.Owner.Transform.Translation = Real3(this.Space.FindObjectByName("PrototypePlayer").Transform.Translation.X - 1, this.Space.FindObjectByName("PrototypePlayer").Transform.Translation.Y, this.Space.FindObjectByName("PrototypePlayer").Transform.Translation.Z); // la posicion de spawneo, hay que tener en cuenta el flip del personaje, osea hacia donde esta mirando
        else
            this.Owner.Transform.Translation = Real3(this.Space.FindObjectByName("PrototypePlayer").Transform.Translation.X + 1, this.Space.FindObjectByName("PrototypePlayer").Transform.Translation.Y, this.Space.FindObjectByName("PrototypePlayer").Transform.Translation.Z);
    }
    function SetValues(damage : Real, color : Real4, lifeTime : Real, impulse : Real3, onlyPushEnemy : Boolean, scale : Real3)
    {
        this.Damage = damage;
        this.Owner.Sprite.Color = color;
        this.LifeTime = lifeTime;
        this.Impulse = impulse;
        if(this.Space.FindObjectByName("PrototypePlayer").Sprite.FlipX)
            this.Impulse.X = -this.Impulse.X;
        if(onlyPushEnemy)
            this.Owner.BoxCollider.CollisionGroup = CollisionGroup.OnlyKnockUpEnemy;
        this.Owner.Transform.Scale = scale;
        this.ValuesSet = true;
    }
    function Push(event : CollisionEvent)
    {
        //Console.WriteLine(event.OtherObject.Name);
        event.OtherObject.RigidBody.Velocity = this.Impulse;
    }
}
