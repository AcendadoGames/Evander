class CameraShake : ZilchComponent
{
    // Transform of the camera to shake. Grabs the gameObject's transform
    // if null.
    var CamTransform : Real3;
    
    // How long the object should shake for.
    var ShakeDuration : Real = 5;

    // Amplitude of the shake. A larger value shakes the camera harder.
    var ShakeAmount : Real = 0.2;
    
    var DecreaseFactor : Real = 1;
    
    var OriginalPos : Real3;
    
    var Rand : Random = Random();
    
    var Shake : Boolean = false;
    
    var Controller:Gamepad = null;
    
    var Vibrate : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        this.OriginalPos = this.Owner.Transform.LocalTranslation;
        this.Controller = Zero.Gamepads.GetGamePad(0);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }
            
    function SingleShake(vibrate : Boolean)
    {
        this.Shake = true;
        this.Vibrate = vibrate;
        this.ResetValues();
    }
    function OnLogicUpdate(event : UpdateEvent)
    {
        this.OriginalPos = this.Owner.Transform.LocalTranslation;
            
        if(this.Shake)
        {
            if(this.Vibrate)
            {
                //Console.WriteLine("here");
                this.Controller.Vibrate(0.3,1,1);
                this.Vibrate = false;   
            }
            
            var randomShake = Real3(this.Rand.Range(-5,5),this.Rand.Range(-5,5),0);
            if (this.ShakeDuration > 0)
            {
                this.Owner.Transform.LocalTranslation = this.OriginalPos + randomShake * this.ShakeAmount;
                
                this.ShakeDuration -= event.Dt * this.DecreaseFactor;
                this.ShakeAmount -= event.Dt * this.DecreaseFactor;
                if (this.ShakeAmount <= 0) this.ShakeAmount = 0;
            }
            else
            {
                this.ResetValues();
                this.Owner.Transform.LocalTranslation = this.OriginalPos;
                this.Shake = false;
                this.Vibrate = false;
            }   
        }
    }
    function ResetValues()
    {
        this.ShakeDuration = 5;
        this.ShakeAmount = 0.2;
        this.DecreaseFactor = 1;
    }
}
