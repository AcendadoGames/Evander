class StateA : State
{
    function Initialize(init : CogInitializer)
    {
        this.StateInitialize(init);
    }
    
    [Override]function Enter()
    {
        Console.WriteLine("State A::Enter");
    }
    
    
    [Override]function Update(event : UpdateEvent)
    {
        if(Zero.Keyboard.KeyIsPressed(Keys.Space))
        {
            this.Owner.StateMachine.ChangeState(this.Owner.StateB);
        }
    }
}

class StateB : State
{
    
    function Initialize(init : CogInitializer)
    {
        this.StateInitialize(init);
    }
    
    [Override]function Enter()
    {
        Console.WriteLine("State B::Enter");
    }
    [Override]function Update(event : UpdateEvent)
    {
        if(Zero.Keyboard.KeyIsPressed(Keys.Space))
        {
            this.Owner.StateMachine.ChangeState(this.Owner.StateC); // this will ultimately be NULL.
            this.Owner.StateMachine.ChangeState("StateB");          // this will have no effect because we're already in this state.
            this.Owner.StateMachine.ChangeState("StateA");          // only last state change applies.
        }
    }
}

// Dummy State only created for the example
class StateC : State
{}