class AnimState : State
{

    // Sprite Animation Data
    [Property] var StateAnimEnabled : Boolean = false;
    [Property] var StateAnimForceReset : Boolean = false;
    [Property] var StateAnim : SpriteSource = null;
    [Property] var StateAnimStartFrame : Integer = 0;
    [Property] var StateAnimSpeed : Real = 1.0;
    [Property] var StateAnimFlipX : Boolean = false;
    [Property] var StateAnimFlipY : Boolean = false;
    [Property] var StateAnimLoop : Boolean = false;
    
    // Internal enter is changed from its original
    [Override]function InternalEnter()
    {
        // Change state animation BEFORE 
        // so that custom State OnEnter can override the
        // modifications.
        this.StateAnimChange();
        
        // Call base class internal enter.
        (this as State)~>InternalEnter();
    }
    
    
    function StateAnimChange()
    {
        if(this.Actor.Sprite != null && this.StateAnimEnabled && this.StateAnim != null)
        {
            // Change to new anim or reset the animation if necessary
            if(this.Actor.Sprite.SpriteSource != this.StateAnim || this.StateAnimForceReset)
                this.Actor.Sprite.SpriteSource = this.StateAnim;
                
            // Change state data
            this.Actor.Sprite.StartFrame = this.StateAnimStartFrame;
            this.Actor.Sprite.AnimationSpeed = this.StateAnimSpeed;
            this.Actor.Sprite.FlipX = this.StateAnimFlipX;
            this.Actor.Sprite.FlipY = this.StateAnimFlipY;
            this.Actor.Sprite.SpriteSource.Looping = this.StateAnimLoop;
        }
    }
}
