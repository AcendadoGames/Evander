class Janus_Phase_3 : SuperState
{
    var JanusTotalHealth : Real;
    
    var CurrentHealth : Real;
    
    function Initialize(init : CogInitializer)
    {
        this.StateInitialize(init);
    }
    [Override]function Enter()
    {
        this.JanusTotalHealth = this.Space.FindObjectByName("Janus").JanusHealth.JanusHealth;
        this.Owner.StateMachine.ChangeState(this.Owner.Janus_Phase_3_Attack);
    }
}
class Janus_Phase_3_Attack : State
{
    var JanusTotalHealth : Real;
    [Property]
    var Phase3RecoveryHealth : Real = 100;
    [Property]
    var AttackTime : Real = 4;
    [Property]
    var ArmAttackSpeed : Real = 0.7;
    [Property]
    var ArrowAttackSpeed : Real = 0.7;
    [Property]
    var NumberOfArrows : Real = 30;
    [Property]
    var WaveAttackSpeed : Real = 0.7;
    [Property]
    var FadeTime : Real = 3;
    [Property]
    var BlackTime : Real = 1;
    
    
    var RandomGenerator : Random = Random();
    var RandomNum : Integer;
    var TimerForNextAttack : Real = 0.0;
    var TimerForArmAttack : Real = 0.0;
    var TimerForArrowAttack : Real = 0.0;
    var TimerForWaveAttack : Real = 0.0;
    var TimerForFade : Real =0.0;
    var TimerForBlackS :  Real = 0.0; 
    var ColorForPreAttack : Real4 = Real4(0.0, 0.0, 1, 1);
    var ColorForAttack : Real4 = Real4(1, 0.0, 0.0, 1);
    
    var Attack : Boolean = true;
    
    function Initialize(init : CogInitializer)
    {
        this.StateInitialize(init);
        this.RandomGenerator = Random();
        
    }
    [Override]function Enter()
    {
        Console.WriteLine("Phase3");
        Console.WriteLine("Attacking");
        this.JanusTotalHealth = this.Space.FindObjectByName("Janus").JanusHealth.JanusHealth;
    }
    function WaveAttack()
    {
        
    }
    function ArrowAttack()
    {
        var counter = 0;
        
        var spawnPosition = this.Space.FindObjectByName("ArrowSpawner").Transform.Translation;
        var archetypeToSpawn = Archetype.ArrowForJanus;
        
        var randomOffsetX = this.RandomGenerator.Range(11,-11);
        var randomOffsetY = this.RandomGenerator.Range(0, 4);
        var offset = Real3(randomOffsetX, randomOffsetY, 0);
        
        for (counter = 0; counter <= this.NumberOfArrows; counter += 1)
        {
            randomOffsetX = this.RandomGenerator.Range(3,-3);
            randomOffsetY = this.RandomGenerator.Range(0, 4);
            
            offset = Real3(randomOffsetX, randomOffsetY, -0.5);
            
            this.Space.CreateAtPosition(archetypeToSpawn, spawnPosition + offset);
        }
        this.TimerForArrowAttack = 0;
        }

    function ArmAttack()
    {
        this.Owner.FindChildByName("ArmDamage3").Sprite.Color = this.ColorForAttack;
        this.Owner.FindChildByName("ArmDamage3").BoxCollider.SendsEvents = true;
        this.Owner.FindChildByName("ArmDamage3").JanusArmDamage.DoingTheAttack = true;
    }
    
    [Override]function Update(event : UpdateEvent)
        {
            var playerPosition = this.Space.FindObjectByName("PrototypePlayer").Transform.Translation;
            var ownerPosition = this.Owner.Transform.Translation;
            
            var distanceToPlayer = Math.Distance(playerPosition,ownerPosition);
            
            //Console.WriteLine(distanceToPlayer);
           // Console.WriteLine(this.JanusTotalHealth);
            this.JanusTotalHealth = this.Space.FindObjectByName("Janus").JanusHealth.JanusHealth;
            
            if(this.Space.FindObjectByName("BossStartingLine").StartingBossScript.BossFight == true && this.Attack == true)
            {
                this.TimerForNextAttack += event.Dt;
                
                if (this.TimerForNextAttack >= this.AttackTime)
                {
                    this.RandomNum = this.RandomGenerator.DieRoll(2);
                    this.TimerForNextAttack = 0;
                }
                /*--------------------------------------First Attack-----------------------------------------------*/
                if (this.RandomNum == 1)
                {
                    this.TimerForArmAttack += event.Dt;
                    this.Owner.FindChildByName("ArmDamage3").Sprite.Visible = true;
                    this.Owner.FindChildByName("ArmDamage3").Sprite.Color = this.ColorForPreAttack;
                    if(this.TimerForArmAttack >= this.ArmAttackSpeed)
                    {
                        this.ArmAttack();
                        this.TimerForArmAttack = 0;
                        this.RandomNum = 0;
                    }
                }
                /*--------------------------------------Second Attack-----------------------------------------------*/
                if (this.RandomNum == 2)
                {
                    this.TimerForArrowAttack += event.Dt;
                    this.Space.FindObjectByName("ArrowSpawner").MovingArrowSpawner.Shooting = true;
                    this.Space.FindObjectByName("Portal").BoxParticleEmitter.Active = true;
                    this.Space.FindObjectByName("BackGroundPortal").BoxParticleEmitter.Active = true;
                    
                    if(this.TimerForArrowAttack >= this.ArrowAttackSpeed)
                    {
                        this.ArrowAttack();
                        this.TimerForNextAttack = 0;
                        this.RandomNum = 0;
                    }
                }
                /*---------------------------------------Third Attack-----------------------------------------------*/
                if (this.RandomNum == 3)
                {
                    
                }
                /*--------------------------------------------------------------------------------------------------*/
            }
        if (this.JanusTotalHealth <= this.Phase3RecoveryHealth)
            {
                
                this.GameSession.FindSpaceByName("HudSpace").LevelSettings.CameraViewport.Active = false;
                this.Attack = false;
                this.TimerForFade += event.Dt;
                
                if(this.TimerForFade >= this.FadeTime)
                {
                    if (this.Space.FindObjectByName("FadeOut").Sprite.Color.W <= 0.999999 )
                            this.Space.FindObjectByName("FadeOut").Sprite.Color += Real4(0,0,0,0.01);
                }
                if (this.Space.FindObjectByName("FadeOut").Sprite.Color.W >= 0.999999 )
                {
                    this.TimerForBlackS += event.Dt;
                    if (this.TimerForBlackS >= this.BlackTime)
                        this.Owner.StateMachine.ChangeState(this.Owner.Janus_Phase_3_Explosion);
                }
            }
        }

    [Override] function Exit()
        {
            this.TimerForNextAttack = 0;
            
            this.TimerForArrowAttack = 0;
            this.TimerForArmAttack = 0;
            
            this.Owner.FindChildByName("ArmDamage3").Sprite.Visible = false;
            
            this.RandomNum = 0;
        }
    }
class Janus_Phase_3_Explosion : State
{
    [Property]
    var ExplosionTimer : Real = 3;
    [Property]
    var Change : Real = 0.07;
    
    var Janus :Cog = null;
    var JanusPos : Real3;
    var JanusScale : Real3;
    var Timer1 : Real = 0;
    var Timer : Real = 0;
    var RandomGenerator : Random = Random();
    
    
    var RandomNum1Color : Real;
    var RandomNum2Color : Real;
    
    var RandomNum1Pos : Real;
    var RandomNum2Pos : Real;
    
    var RandomNum1Scale : Real;
    var RandomNum2Scale : Real;
    
    function Initialize(init : CogInitializer)
    {
        this.StateInitialize(init);
        this.Janus = this.Owner.Parent.Parent.Parent;
        this.JanusPos = this.Janus.Transform.Translation;
        this.JanusScale = this.Janus.Transform.Scale;
    }
    [Override]function Enter()
    {
        this.Space.FindObjectByName("PrototypePlayer").Transform.Translation = Real3(-14,2,0);
        this.Space.FindObjectByName("PrototypePlayer").MovementController.CanPlay = false;
        this.Space.GlobalVariables.EnablePlay = false;
        this.Space.FindObjectByName("Camera").NewCameraLogic.CameraCanMove = false;
        this.Space.FindObjectByName("Camera").Transform.Translation = Real3(this.Janus.Transform.Translation.X, this.Janus.Transform.Translation.Y + 5,this.Space.FindObjectByName("Camera").Transform.Translation.Z);
    }
    [Override]function Update(event : UpdateEvent)
    {
        var change : Boolean = false;
        if(this.Space.FindObjectByName("FadeOut").Sprite.Color.W >= 0.02)
            this.Space.FindObjectByName("FadeOut").Sprite.Color -= Real4(0,0,0,0.015);
        
        this.Janus.Transform.Translation = this.JanusPos;
        
        this.RandomNum1Color = this.RandomGenerator.Range(0,0.7);
        this.RandomNum2Color = this.RandomGenerator.Range(0,0.2);
        
        
        this.RandomNum1Pos = this.RandomGenerator.Range(-3,3);
        this.RandomNum2Pos = this.RandomGenerator.Range(-3,3);
        
        this.RandomNum1Scale = this.RandomGenerator.Range(1 ,1.5);
        this.RandomNum2Scale = this.RandomGenerator.Range(1 ,1.5);
        
        if (this.Space.FindObjectByName("FadeOut").Sprite.Color.W <= 0.9)
        {
            this.Timer += event.Dt;
        }
        if(this.Timer >= this.ExplosionTimer)
        {
            this.Space.FindObjectByName("Explosion1").BoxParticleEmitter.Active = true;
            this.Space.FindObjectByName("Explosion2").BoxParticleEmitter.Active = true;
            this.Space.FindObjectByName("Camera").CameraShake.SingleShake(true);
            
            if(this.Space.FindObjectByName("FadeIn").Sprite.Color.W <=0.98)
                this.Space.FindObjectByName("FadeIn").Sprite.Color +=  Real4(0,0,0,0.005);
            else
            {
                this.Space.FindObjectByName("Explosion1").BoxParticleEmitter.Active = false;
                this.Space.FindObjectByName("Explosion2").BoxParticleEmitter.Active = false;
                this.Space.FindObjectByName("Camera").CameraShake.SingleShake(false);
            }
        }
        else
        {
            this.Timer1 += event.Dt;
            
            if(this.Timer1 >= this.Change)
            {
                this.Janus.Transform.Translation = Real3(this.JanusPos.X + this.RandomNum1Pos, this.JanusPos.Y + this.RandomNum2Pos , 0);
                this.Janus.Sprite.Color = Real4(1, this.RandomNum1Color, this.RandomNum2Color, 1);
                this.Janus.Transform.Scale = Real3(this.RandomNum1Scale, this.RandomNum2Scale, this.JanusScale.Z);
                this.Timer1 = 0;
            }
            
        }
    }
}