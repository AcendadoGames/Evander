class TargetSelector : ZilchComponent
{
    var TargetPosition : Real3 = Real3(-99999999,-9999999,-999999);
    var Controller:Gamepad = null;
    var EnemyIndex : Integer = 0;
    var RightStickRightPressed : Boolean = false;
    var RightStickLeftPressed : Boolean = false;
    var Temp1 : Boolean = false;
    var Temp2 : Boolean = false;
    
    function Initialize(init : CogInitializer)
    {
        this.Controller = Zero.Gamepads.GetGamePad(0);
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

    function OnLogicUpdate(event : UpdateEvent)
    {
        var enemyarray = this.Space.FindAllObjectsByName("PrototypeEnemy");
        var mouseScreenPosition = Zero.Mouse.ScreenPosition;
        var mouseWorldPosition = this.LevelSettings.CameraViewport.ScreenToWorldZPlane(mouseScreenPosition, 0);

        var a : Array[Real3] = new Array[Real3]();
        while (enemyarray.IsNotEmpty)
        {
            a.Push(enemyarray.Current.Transform.Translation);
            enemyarray.MoveNext();
        }
        this.Space.GeneralAlgorithms.ArraySorting(a, 0, a.LastIndex);
                

        if(a == null)
            this.Space.GlobalVariables.NoEnemies = true;
        else
            this.Space.GlobalVariables.NoEnemies = false;
            
        if(a != null)
        {
            if(this.Controller.IsActive)
            {
                this.RightStickInput();
                
                if(this.RightStickRightPressed && this.EnemyIndex < a.LastIndex)
                {
                    this.EnemyIndex += 1;
                }
                if(this.RightStickLeftPressed && this.EnemyIndex > 0)
                {
                    this.EnemyIndex -= 1;
                }
                if(!this.Space.GlobalVariables.CanDash && this.Space.GlobalVariables.CanSpell1)
                    this.TargetPosition = a[this.EnemyIndex];
            }
            else
            {
                for(var i = 0; i < a.Count; i += 1)
                {
                    if(Math.Distance(a[i], mouseWorldPosition) < 
                       Math.Distance(this.TargetPosition, mouseWorldPosition))
                        {
                            if(!this.Space.GlobalVariables.CanDash && this.Space.GlobalVariables.CanSpell1)
                                this.TargetPosition = a[i]; 
                        }   
                }
            }
            
            
        }
    }
    
    function RightStickInput()
    {
        //Left Input
        if(this.Controller.RightStick.X < -0.2 && !this.Temp1)
        {
            this.RightStickLeftPressed = true;
            this.Temp1 = true;
        }
        else
            this.RightStickLeftPressed = false;  
        
        if(this.Controller.RightStick.X > -0.2)
            this.Temp1 = false;
        
        //Right Input    
        if(this.Controller.RightStick.X > 0.2 && !this.Temp2)
        {
            this.RightStickRightPressed = true;
            this.Temp2 = true;
        }
        else
            this.RightStickRightPressed = false;
            
        if(this.Controller.RightStick.X < 0.2)
            this.Temp2 = false;
    }
}

