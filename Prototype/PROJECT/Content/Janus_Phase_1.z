class Janus_Phase_1 : SuperState
{
    [Property]
    var JanusTotalHealth : Real = 1000;
    [Property]
    var Phase1MinHealth : Real = 666;
    
    var CurrentHealth : Real;
    
    function Initialize(init : CogInitializer)
    {
        this.StateInitialize(init);
    }
    [Override]function Update(event : UpdateEvent)
        {
            var playerPosition : Real3 = this.Space.FindObjectByName("PrototypePlayer").Transform.Translation;
            this.Owner.StateMachine.ChangeState(this.Owner.Janus_Phase_1_Attack);
        }
}
class Janus_Phase_1_Attack : State
{
    [Property]
    var JanusTotalHealth : Real = 1000;
    [Property]
    var Phase1RecoveryHealth : Real = 750;
    [Property]
    var AttackTime : Real = 7;
    
    var RandomGenerator : Random = Random();
    var RandomNum : Integer;
    var CurrentHealth : Real;
    var Timer : Real = 0.0;
    
    
    function Initialize(init : CogInitializer)
    {
        this.StateInitialize(init);
        this.RandomGenerator = Random();
        
    }
    function ArmAttack()
    {
        Console.WriteLine(this.Owner.Name);
    }
    
    [Override]function Update(event : UpdateEvent)
        {
            this.Timer += event.Dt;
            
            if (this.Timer >= this.AttackTime)
            {
                this.RandomNum = this.RandomGenerator.DieRoll(4);
                
                if (this.RandomNum == 1)
                {
                    this.ArmAttack();
                }
            }
            if (this.JanusTotalHealth <= this.Phase1RecoveryHealth)
            {
                this.Owner.StateMachine.ChangeState(this.Owner.Janus_Phase_1_Recover);
            }
        }
}
class Janus_Phase_1_Recover : State
{
    [Property]
    var JanusTotalHealth : Real = 1000;
    [Property]
    var Phase1MinHealth : Real = 666;
    
    var CurrentHealth : Real;
    
    function Initialize(init : CogInitializer)
    {
        this.StateInitialize(init);
    }
}