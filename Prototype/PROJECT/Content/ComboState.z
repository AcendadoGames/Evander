//class ComboState : ZilchComponent
//{
//    [Property]
//    var NoneAttack : SpriteSource;
//    [Property]
//    var PreAttackTime : Real = 0.2;
//    [Property]
//    var PreAttackAnim : SpriteSource;
//    [Property]
//    var OnAttackTime : Real = 0.2;
//    [Property]
//    var OnAttackAnim : SpriteSource;
//    [Property]
//    var PostAttackTime : Real = 0.2;
//    [Property]
//    var PostAttackAnim : SpriteSource;
//    [Property]
//    var InputTiming : Real = 0.2;
//    [Property]
//    var Text : String = null;
//    [Property]
//    var DamageArchetype : Archetype = Archetype.Find("damage");
//    [Property]
//    var Damage : Real = 0;
//    [Property]
//    var Color : Real4 = Real4(0,0,0,0);
//    [Property]
//    var LifeTime : Real = 0.0;

//    var Time : Real = 0.0;
    
//    var Temp1 : Real;

    
//    function Initialize(init : CogInitializer)
//    {
//        this.Temp1 = this.PreAttackTime + this.OnAttackTime + this.PostAttackTime;
//    }
//    function ExecuteCombo()
//    {
//        if(this.Time == 0/*el momento que queramos que se spawnee el damage, solo hay que hacerlo un frame*/)
//        {
//            var position = this.Owner.Transform.Translation; // la posicion de spawneo, hay que tener en cuenta el flip del personaje, osea hacia donde esta mirando
//            var damage = this.Space.CreateAtPosition(this.DamageArchetype, position);
//            damage.Attack.SetValues(this.Damage, this.Color, this.LifeTime);
         
//        }
        
//        //Console.WriteLine("Executing", this.Text);
//        if(this.Time < this.PreAttackTime)
//        {
//            //this.Space.FindObjectByName("PrototypePlayer").Sprite.SpriteSource = this.PreAttackAnim;
//        }
//        if(this.Time < this.OnAttackTime + this.PreAttackTime)
//        {
//            //this.Space.FindObjectByName("PrototypePlayer").Sprite.SpriteSource = this.OnAttackAnim;
//        }
//        if(this.Time < this.Temp1)
//        {
//            //this.Space.FindObjectByName("PrototypePlayer").Sprite.SpriteSource = this.PostAttackAnim;
//        }
        
//    }
//}
